%{
#include <string.h>
#include "token.h"
%}
struct symbol;
%%
Bool,              SYM_BOOL
true,              SYM_TRUE
false,             SYM_FALSE
not,               SYM_NOT
=>,                SYM_IMPLIES
and,               SYM_AND
or,                SYM_OR
xor,               SYM_XOR
=,                 SYM_EQ
distinct,          SYM_DISTINCT
ite,               SYM_ITE
Array,             SYM_ARRAY
select,            SYM_SELECT
store,             SYM_STORE
Int,               SYM_INT
Real,              SYM_REAL
-,                 SYM_MINUS
+,                 SYM_PLUS
*,                 SYM_TIMES
/,                 SYM_DIVIDES
<=,                SYM_LE
<,                 SYM_LT
>=,                SYM_GE
>,                 SYM_GT
div,               SYM_DIV
mod,               SYM_MOD
abs,               SYM_ABS
BitVec,            SYM_BITVEC
concat,            SYM_CONCAT
extract,           SYM_EXTRACT
repeat,            SYM_REPEAT
bvcomp,            SYM_BVCOMP
bvredand,          SYM_BVREDAND
bvredor,           SYM_BVREDOR
bvnot,             SYM_BVNOT
bvand,             SYM_BVAND
bvor,              SYM_BVOR
bvnand,            SYM_BVNAND
bvnor,             SYM_BVNOR
bvxor,             SYM_BVXOR
bvxnor,            SYM_BVXNOR
bvneg,             SYM_BVNEG
bvadd,             SYM_BVADD
bvsub,             SYM_BVSUB
bvmul,             SYM_BVMUL
bvudiv,            SYM_BVUDIV
bvurem,            SYM_BVUREM
bvsdiv,            SYM_BVSDIV
bvsrem,            SYM_BVSREM
bvsmod,            SYM_BVSMOD
bvshl,             SYM_BVSHL
bvlshr,            SYM_BVLSHR
bvashr,            SYM_BVASHR
zero_extend,       SYM_ZERO_EXTEND
sign_extend,       SYM_SIGN_EXTEND
rotate_left,       SYM_ROTATE_LEFT
rotate_right,      SYM_ROTATE_RIGHT
bvult,             SYM_BVULT
bvule,             SYM_BVULE
bvugt,             SYM_BVUGT
bvuge,             SYM_BVUGE
bvslt,             SYM_BVSLT
bvsle,             SYM_BVSLE
bvsgt,             SYM_BVSGT
bvsge,             SYM_BVSGE