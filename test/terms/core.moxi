(define-fun f0 () Bool true)
(define-fun f1 () Bool false)
(define-fun f2 ((x Bool)) Bool x)
(define-fun f3 ((x Bool)) Bool (not x))
(define-fun f4 ((x Bool) (y Bool)) Bool (and x y))
(define-fun f6 ((x Bool) (y Bool) (z Bool)) Bool (and x y z))
(define-fun f7 ((x Bool) (y Bool)) Bool (or x y))
(define-fun f8 ((x Bool) (y Bool) (z Bool)) Bool (or x y z))
(define-fun f9 ((x Bool) (y Bool)) Bool (=> x y))
(define-fun f10 ((x Bool) (y Bool) (z Bool)) Bool (=> x y z))
(define-fun f11 ((x Bool) (y Bool)) Bool (xor y x))
(define-fun f12 ((x Bool) (y Bool) (z Bool)) Bool (xor x y z))
(define-fun f13 ((x Bool) (y Bool)) Bool (= x y))
(define-fun f14 ((x Bool) (y Bool) (z Bool)) Bool (= x y z))
(define-fun f15 ((x Bool) (y Bool)) Bool (distinct x y))
(define-fun f16 ((x Bool) (y Bool) (z Bool)) Bool (distinct x y z))
(define-fun f17 ((x Bool) (y Bool) (z Bool)) Bool (ite x y z))
